// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Telegram –±–æ—Ç–∞
const TELEGRAM_BOT_TOKEN = '7990777742:AAGfKV8pNZOZ7pa6X0behbsYcuvFFI6aypw';
const TELEGRAM_CHAT_ID = '-1002504242503';

// –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–ª—è —è–∫–æ—Ä–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
        e.preventDefault();
        
        const targetId = this.getAttribute('href');
        if (targetId === '#') return;
        
        const targetElement = document.querySelector(targetId);
        if (targetElement) {
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é, –µ—Å–ª–∏ –æ–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ
            const navbar = document.getElementById('navbar');
            const hamburger = document.getElementById('hamburger');
            const navList = document.querySelector('#navbar ul');
            
            if (navList.classList.contains('active')) {
                navList.classList.remove('active');
                hamburger.innerHTML = '<i class="fas fa-bars"></i>';
                navbar.style.background = 'white';
            }
            
            // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ —ç–ª–µ–º–µ–Ω—Ç—É
            window.scrollTo({
                top: targetElement.offsetTop - 70,
                behavior: 'smooth'
            });
        }
    });
});

// –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞–≤–±–∞—Ä–∞ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
window.addEventListener('scroll', function() {
    const navbar = document.getElementById('navbar');
    if (window.scrollY > 50) {
        navbar.classList.add('scrolled');
    } else {
        navbar.classList.remove('scrolled');
    }
});

// –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é
document.getElementById('hamburger').addEventListener('click', function() {
    const navList = document.querySelector('#navbar ul');
    const navbar = document.getElementById('navbar');
    
    navList.classList.toggle('active');
    
    if (navList.classList.contains('active')) {
        this.innerHTML = '<i class="fas fa-times"></i>';
        navbar.style.background = 'white';
    } else {
        this.innerHTML = '<i class="fas fa-bars"></i>';
        if (window.scrollY < 50) {
            navbar.style.background = 'transparent';
        }
    }
});

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
document.addEventListener('click', function(e) {
    const navbar = document.getElementById('navbar');
    const hamburger = document.getElementById('hamburger');
    const navList = document.querySelector('#navbar ul');
    
    if (!e.target.closest('#navbar') && navList.classList.contains('active')) {
        navList.classList.remove('active');
        hamburger.innerHTML = '<i class="fas fa-bars"></i>';
        if (window.scrollY < 50) {
            navbar.style.background = 'transparent';
        }
    }
});

// –ú–∞—Å–∫–∞ –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
document.getElementById('phoneInput').addEventListener('input', function(e) {
    // –£–¥–∞–ª—è–µ–º –≤—Å–µ –Ω–µ—Ü–∏—Ñ—Ä–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã
    let phone = e.target.value.replace(/\D/g, '');
    
    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –Ω–æ–º–µ—Ä–∞ (1 - –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã, 10 —Ü–∏—Ñ—Ä –Ω–æ–º–µ—Ä–∞)
    phone = phone.substring(0, 11);
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä
    let formattedPhone = '+7';
    if (phone.length > 1) {
        formattedPhone += ' (' + phone.substring(1, 4);
    }
    if (phone.length > 4) {
        formattedPhone += ') ' + phone.substring(4, 7);
    }
    if (phone.length > 7) {
        formattedPhone += '-' + phone.substring(7, 9);
    }
    if (phone.length > 9) {
        formattedPhone += '-' + phone.substring(9, 11);
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    e.target.value = formattedPhone;
});

// –î–æ–±–∞–≤–∏–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –≤–≤–æ–¥–∞ –Ω–µ—Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
document.getElementById('phoneInput').addEventListener('keydown', function(e) {
    // –†–∞–∑—Ä–µ—à–∞–µ–º: backspace, delete, tab, escape, enter, —Å—Ç—Ä–µ–ª–∫–∏
    if ([46, 8, 9, 27, 13, 110].includes(e.keyCode) || 
        (e.keyCode === 65 && e.ctrlKey === true) || // Ctrl+A
        (e.keyCode >= 35 && e.keyCode <= 39)) { // Home, End, —Å—Ç—Ä–µ–ª–∫–∏
        return;
    }
    
    // –ó–∞–ø—Ä–µ—â–∞–µ–º –≤—Å–µ, –∫—Ä–æ–º–µ —Ü–∏—Ñ—Ä
    if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
        e.preventDefault();
    }
});


// TELEGRAM
document.getElementById('contactForm').addEventListener('submit', async function(e) {
    e.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã
    
    const form = e.target;
    const formData = new FormData(form);
    const formMessage = document.getElementById('formMessage');
    const submitButton = form.querySelector('button[type="submit"]');
    const phoneInput = document.getElementById('phoneInput');
    
    // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    formMessage.className = 'form-message';
    formMessage.textContent = '';
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–ª–µ–π
    const name = formData.get('name').trim();
    const phone = formData.get('phone').trim();
    const phoneNumber = phone.replace(/\D/g, '');
    
    if (!name) {
        formMessage.textContent = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è';
        formMessage.className = 'form-message error';
        return false; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º false –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    }
    
    if (!phone || phoneNumber.length !== 11) {
        formMessage.textContent = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (11 —Ü–∏—Ñ—Ä)';
        formMessage.className = 'form-message error';
        phoneInput.focus();
        return false;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    const originalButtonText = submitButton.innerHTML;
    submitButton.disabled = true;
    submitButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> –û—Ç–ø—Ä–∞–≤–∫–∞...';
    
    try {
        // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        const messageText = `üìå <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞</b>\n\n` +
                         `üë§ <b>–ò–º—è:</b> ${name}\n` +
                         `üì± <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${phone}\n` +
                         `‚úâÔ∏è <b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b> ${formData.get('message') || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n\n` +
                         `üïí <i>${new Date().toLocaleString()}</i>`;
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
        const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                chat_id: TELEGRAM_CHAT_ID,
                text: messageText,
                parse_mode: 'HTML'
            })
        });
        
        const result = await response.json();
        
        if (response.ok && result.ok) {
            formMessage.textContent = '‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.';
            formMessage.className = 'form-message success';
            form.reset();
        } else {
            throw new Error(result.description || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        formMessage.textContent = '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É.';
        formMessage.className = 'form-message error';
    } finally {
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
        submitButton.disabled = false;
        submitButton.innerHTML = originalButtonText;
    }
    
    return false; // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function closePhoneModal() {
    document.getElementById('phoneModal').style.display = 'none';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–º–µ—Ä–∞
function copyPhoneNumber() {
    const phoneNumber = '+79205621808';
    navigator.clipboard.writeText(phoneNumber).then(() => {
        alert('–ù–æ–º–µ—Ä —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
    }).catch(err => {
        console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è: ', err);
    });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ WhatsApp
document.querySelectorAll('.fa-whatsapp').forEach(icon => {
    icon.addEventListener('click', function(e) {
        e.preventDefault();
        showPhoneModal();
    });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è
document.querySelector('.close-modal').addEventListener('click', closePhoneModal);